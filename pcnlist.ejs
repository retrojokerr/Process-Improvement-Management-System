<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Entry Details</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #EDDFDF;
            margin: 0;
            padding: 0;
        }

        .navbar {
    background-color: #FFF3F3;
    color: black;
    box-shadow: 0px 0px 10px #00000040;
    margin-bottom: 0;
    border-radius: 0;
    display: flex; /* Enable Flexbox */
    align-items: center; /* Center items vertically */
    justify-content: space-between; /* Distribute space between items */
}

.navbar .container-fluid {
    display: flex; /* Enable Flexbox */
    align-items: center; /* Center items vertically */
    width: 100%; /* Ensure the container takes the full width */
}

.navbar-text {
    font-size: small;
    font-weight: 550;
    margin-left: auto; /* Push the text to the right */
    margin-right: 30px;
}

        .container {
            margin-top: 80px;
            padding: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        .search-bar {
            margin-bottom: 20px;
        }

        .search-bar input {
            display: flex;

            width: 50%;
            max-width: 300px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .pagination button {
            padding: 10px 20px;
            margin: 0 5px;
            border: none;
            background-color: #d40000;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }

        .pagination button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="container-fluid">
            <img class="image" src="./bseslogo.png" height="80" width="130"/>
            <span class="navbar-text">
                Powered by : BSES
            </span>
        </div>
    </nav>
    <div class="container">
        <h2>Request Entry Details</h2>
        <div class="search-bar">
            <input type="text" id="searchInput" placeholder="Search">
        </div>
        <table id="requestTable">
            <thead>
                <tr>
                    <th>S.No.</th>
                    <th>Request ID</th>
                    <th>Generated by</th>
                    <th>Company</th>
                    <th>Module</th>
                    <th>Last action by</th>
                    <th>Current status</th>
                    <th>Entry Date</th>
                    <th>View</th>
                </tr>
            </thead>
            <tbody>
                <% data.forEach((row, index) => { %>
                    <tr>
                      <td><%= index + 1 %></td>
                      <td><%= row.id %></td>
                      <td><%= row.name %></td>
                      <td><%= row.company %></td>
                      <td><%= row.pri_mod %></td>
                      <td><%= row.last_action_by %></td>
                      <td><%= row.curr_status %></td>
                      <td><%= row.req_dt %></td>
                      <td><%= row.dept %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
        <div class="pagination">
            <button id="prevBtn" disabled>Prev</button>
            <span id="pageInfo"></span>
            <button id="nextBtn">Next</button>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tableBody = document.getElementById('requestTable').getElementsByTagName('tbody')[0];
            const searchInput = document.getElementById('searchInput');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const pageInfo = document.getElementById('pageInfo');

            let currentPage = 1;
            const itemsPerPage = 10;
            let totalItems = 0;

            function fetchData(page = 1, searchQuery = '') {
                // Replace with your backend API URL
                const apiUrl = `/api/requests?page=${page}&itemsPerPage=${itemsPerPage}&search=${searchQuery}`;
                
                fetch(apiUrl)
                    .then(response => response.json())
                    .then(data => {
                        totalItems = data.totalItems;
                        populateTable(data.requests);
                        updatePagination();
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }

            function populateTable(requests) {
                tableBody.innerHTML = '';
                requests.forEach((request, index) => {
                    const row = tableBody.insertRow();
                    row.insertCell(0).textContent = (currentPage - 1) * itemsPerPage + index + 1;
                    row.insertCell(1).textContent = request.requestId;
                    row.insertCell(2).textContent = request.generatedBy;
                    row.insertCell(3).textContent = request.company;
                    row.insertCell(4).textContent = request.module;
                    row.insertCell(5).textContent = request.lastActionBy;
                    row.insertCell(6).textContent = request.currentStatus;
                    row.insertCell(7).textContent = request.entryDate;
                    const viewCell = row.insertCell(8);
                    const viewLink = document.createElement('a');
                    viewLink.href = `/view-request/${request.requestId}`;
                    viewLink.textContent = 'View';
                    viewCell.appendChild(viewLink);
                });
            }

            function updatePagination() {
                pageInfo.textContent = `Page ${currentPage} of ${Math.ceil(totalItems / itemsPerPage)}`;
                prevBtn.disabled = currentPage === 1;
                nextBtn.disabled = currentPage === Math.ceil(totalItems / itemsPerPage);
            }

            searchInput.addEventListener('input', () => {
                fetchData(1, searchInput.value);
            });

            prevBtn.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    fetchData(currentPage, searchInput.value);
                }
            });

            nextBtn.addEventListener('click', () => {
                if (currentPage < Math.ceil(totalItems / itemsPerPage)) {
                    currentPage++;
                    fetchData(currentPage, searchInput.value);
                }
            });

            fetchData();
        });
    </script>
</body>
</html>


